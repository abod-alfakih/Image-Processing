# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'CV10.ui'
#
# Created by: PyQt5 UI code generator 5.15.4
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.


import cv2
import matplotlib
import numpy as np
from PyQt5 import QtCore, QtGui, QtWidgets
from PyQt5.QtGui import QImage, QIcon
from PyQt5.QtWidgets import QFileDialog
from matplotlib.backends.backend_qt5agg import FigureCanvasQTAgg as FigureCanvas
from matplotlib.figure import Figure

matplotlib.use('Qt5Agg')


class Ui_MainWindow(object):
    def setupUi(self, MainWindow):
        MainWindow.setObjectName("MainWindow")
        MainWindow.resize(800, 600)
        MainWindow.setStyleSheet("/*\n"
                                 " * MacOS Style Sheet for QT Applications\n"
                                 " * Author: Jaime A. Quiroga P.\n"
                                 " * Company: GTRONICK\n"
                                 " * Last updated: 25/12/2020, 23:10.\n"
                                 " * Available at: https://github.com/GTRONICK/QSS/blob/master/MacOS.qss\n"
                                 " */\n"
                                 "QMainWindow {\n"
                                 "    background-color:#ececec;\n"
                                 "}\n"
                                 "QPushButton, QToolButton, QCommandLinkButton{\n"
                                 "    padding: 0 5px 0 5px;\n"
                                 "    border-style: solid;\n"
                                 "border-top-color: qlineargradient(spread:pad, x1:0, y1:0, x2:0, y2:1, "
                                 "stop:0 #c1c9cf, stop:1 #d2d8dd);\n "
                                 "border-right-color: qlineargradient(spread:pad, x1:1, y1:0, x2:0, y2:0, "
                                 "stop:0 #c1c9cf, stop:1 #d2d8dd);\n "
                                 "border-bottom-color: qlineargradient(spread:pad, x1:0, y1:1, x2:0, y2:0, "
                                 "stop:0 #c1c9cf, stop:1 #d2d8dd);\n "
                                 "border-left-color: qlineargradient(spread:pad, x1:0, y1:0, x2:1, y2:0, "
                                 "stop:0 #c1c9cf, stop:1 #d2d8dd);\n "
                                 "    border-width: 2px;\n"
                                 "    border-radius: 8px;\n"
                                 "    color: #616161;\n"
                                 "    font-weight: bold;\n"
                                 "background-color: qlineargradient(spread:pad, x1:0.5, y1:0, x2:0.5, y2:1, "
                                 "stop:0 #fbfdfd, stop:0.5 #ffffff, stop:1 #fbfdfd);\n "
                                 "}\n"
                                 "QPushButton::default, QToolButton::default, QCommandLinkButton::default{\n"
                                 "    border: 2px solid transparent;\n"
                                 "    color: #FFFFFF;\n"
                                 "background-color: qlineargradient(spread:pad, x1:0.5, y1:0, x2:0.5, y2:1, "
                                 "stop:0 #84afe5, stop:1 #1168e4);\n "
                                 "}\n"
                                 "QPushButton:hover, QToolButton:hover, QCommandLinkButton:hover{\n"
                                 "    color: #3d3d3d;\n"
                                 "}\n"
                                 "QPushButton:pressed, QToolButton:pressed, QCommandLinkButton:pressed{\n"
                                 "    color: #aeaeae;\n"
                                 "background-color: qlineargradient(spread:pad, x1:0.5, y1:0, x2:0.5, y2:1, "
                                 "stop:0 #ffffff, stop:0.5 #fbfdfd, stop:1 #ffffff);\n "
                                 "}\n"
                                 "QPushButton:disabled, QToolButton:disabled, QCommandLinkButton:disabled{\n"
                                 "    color: #616161;\n"
                                 "background-color: qlineargradient(spread:pad, x1:0.5, y1:0, x2:0.5, y2:1, "
                                 "stop:0 #dce7eb, stop:0.5 #e0e8eb, stop:1 #dee7ec);\n "
                                 "}\n"
                                 "QLineEdit, QTextEdit, QPlainTextEdit, QSpinBox, QDoubleSpinBox, QTimeEdit, "
                                 "QDateEdit, QDateTimeEdit {\n "
                                 "    border-width: 2px;\n"
                                 "    border-radius: 8px;\n"
                                 "    border-style: solid;\n"
                                 "border-top-color: qlineargradient(spread:pad, x1:0.5, y1:1, x2:0.5, y2:0, "
                                 "stop:0 #c1c9cf, stop:1 #d2d8dd);\n "
                                 "border-right-color: qlineargradient(spread:pad, x1:0, y1:0, x2:1, y2:0, "
                                 "stop:0 #c1c9cf, stop:1 #d2d8dd);\n "
                                 "border-bottom-color: qlineargradient(spread:pad, x1:0.5, y1:0, x2:0.5, y2:1, "
                                 "stop:0 #c1c9cf, stop:1 #d2d8dd);\n "
                                 "border-left-color: qlineargradient(spread:pad, x1:1, y1:0, x2:0, y2:0, "
                                 "stop:0 #c1c9cf, stop:1 #d2d8dd);\n "
                                 "    background-color: #f4f4f4;\n"
                                 "    color: #3d3d3d;\n"
                                 "}\n"
                                 "QLineEdit:focus, QTextEdit:focus, QPlainTextEdit:focus, QSpinBox:focus, "
                                 "QDoubleSpinBox:focus, QTimeEdit:focus, QDateEdit:focus, QDateTimeEdit:focus {\n "
                                 "    border-width: 2px;\n"
                                 "    border-radius: 8px;\n"
                                 "    border-style: solid;\n"
                                 "border-top-color: qlineargradient(spread:pad, x1:0.5, y1:1, x2:0.5, y2:0, "
                                 "stop:0 #85b7e3, stop:1 #9ec1db);\n "
                                 "border-right-color: qlineargradient(spread:pad, x1:0, y1:0, x2:1, y2:0, "
                                 "stop:0 #85b7e3, stop:1 #9ec1db);\n "
                                 "border-bottom-color: qlineargradient(spread:pad, x1:0.5, y1:0, x2:0.5, y2:1, "
                                 "stop:0 #85b7e3, stop:1 #9ec1db);\n "
                                 "border-left-color: qlineargradient(spread:pad, x1:1, y1:0, x2:0, y2:0, "
                                 "stop:0 #85b7e3, stop:1 #9ec1db);\n "
                                 "    background-color: #f4f4f4;\n"
                                 "    color: #3d3d3d;\n"
                                 "}\n"
                                 "QLineEdit:disabled, QTextEdit:disabled, QPlainTextEdit:disabled, QSpinBox:disabled, "
                                 "QDoubleSpinBox:disabled, QTimeEdit:disabled, QDateEdit:disabled, "
                                 "QDateTimeEdit:disabled {\n "
                                 "    color: #b9b9b9;\n"
                                 "}\n"
                                 "QSpinBox::up-button, QDoubleSpinBox::up-button, QTimeEdit::up-button, "
                                 "QDateEdit::up-button, QDateTimeEdit::up-button {\n "
                                 "    subcontrol-origin: padding;\n"
                                 "    subcontrol-position: top right;\n"
                                 "    width: 15px;\n"
                                 "    color: #272727;\n"
                                 "    border-left-width: 1px;\n"
                                 "    border-left-color: darkgray;\n"
                                 "    border-left-style: solid;\n"
                                 "    border-top-right-radius: 3px;\n"
                                 "    padding: 3px;\n"
                                 "}\n"
                                 "QSpinBox::down-button, QDoubleSpinBox::down-button, QTimeEdit::down-button, "
                                 "QDateEdit::down-button, QDateTimeEdit::down-button {\n "
                                 "    subcontrol-origin: padding;\n"
                                 "    subcontrol-position: bottom right;\n"
                                 "    width: 15px;\n"
                                 "    color: #272727;\n"
                                 "    border-left-width: 1px;\n"
                                 "    border-left-color: darkgray;\n"
                                 "    border-left-style: solid;\n"
                                 "    border-bottom-right-radius: 3px;\n"
                                 "    padding: 3px;\n"
                                 "}\n"
                                 "QSpinBox::up-button:pressed, QDoubleSpinBox::up-button:pressed, "
                                 "QTimeEdit::up-button:pressed, QDateEdit::up-button:pressed, "
                                 "QDateTimeEdit::up-button:pressed {\n "
                                 "    color: #aeaeae;\n"
                                 "background-color: qlineargradient(spread:pad, x1:0.5, y1:0, x2:0.5, y2:1, "
                                 "stop:0 #ffffff, stop:0.5 #fbfdfd, stop:1 #ffffff);\n "
                                 "}\n"
                                 "QSpinBox::down-button:pressed, QDoubleSpinBox::down-button:pressed, "
                                 "QTimeEdit::down-button:pressed, QDateEdit::down-button:pressed, "
                                 "QDateTimeEdit::down-button:pressed {\n "
                                 "    color: #aeaeae;\n"
                                 "background-color: qlineargradient(spread:pad, x1:0.5, y1:0, x2:0.5, y2:1, "
                                 "stop:0 #ffffff, stop:0.5 #fbfdfd, stop:1 #ffffff);\n "
                                 "}\n"
                                 "QSpinBox::up-button:hover, QDoubleSpinBox::up-button:hover, "
                                 "QTimeEdit::up-button:hover, QDateEdit::up-button:hover, "
                                 "QDateTimeEdit::up-button:hover {\n "
                                 "    color: #FFFFFF;\n"
                                 "    border-top-right-radius: 5px;\n"
                                 "background-color: qlineargradient(spread:pad, x1:0.5, y1:0, x2:0.5, y2:1, "
                                 "stop:0 #84afe5, stop:1 #1168e4);\n "
                                 "    \n"
                                 "}\n"
                                 "QSpinBox::down-button:hover, QDoubleSpinBox::down-button:hover, "
                                 "QTimeEdit::down-button:hover, QDateEdit::down-button:hover, "
                                 "QDateTimeEdit::down-button:hover {\n "
                                 "    color: #FFFFFF;\n"
                                 "    border-bottom-right-radius: 5px;\n"
                                 "background-color: qlineargradient(spread:pad, x1:0.5, y1:0, x2:0.5, y2:1, "
                                 "stop:0 #84afe5, stop:1 #1168e4);\n "
                                 "}\n"
                                 "QSpinBox::up-arrow, QDoubleSpinBox::up-arrow, QTimeEdit::up-arrow, "
                                 "QDateEdit::up-arrow, QDateTimeEdit::up-arrow {\n "
                                 "    image: url(/usr/share/icons/Adwaita/16x16/actions/go-up-symbolic.symbolic.png);\n"
                                 "}\n"
                                 "QSpinBox::down-arrow, QDoubleSpinBox::down-arrow, QTimeEdit::down-arrow, "
                                 "QDateEdit::down-arrow, QDateTimeEdit::down-arrow {\n "
                                 "image: url(/usr/share/icons/Adwaita/16x16/actions/go-down-symbolic.symbolic.png);\n "
                                 "}\n"
                                 "QProgressBar {\n"
                                 "    max-height: 8px;\n"
                                 "    text-align: center;\n"
                                 "    font: italic bold 11px;\n"
                                 "    color: #3d3d3d;\n"
                                 "    border: 1px solid transparent;\n"
                                 "    border-radius:4px;\n"
                                 "background-color: qlineargradient(spread:pad, x1:0, y1:0, x2:0, y2:1, "
                                 "stop:0 #ddd5d5, stop:0.5 #dad3d3, stop:1 #ddd5d5);\n "
                                 "}\n"
                                 "QProgressBar::chunk {\n"
                                 "background-color: qlineargradient(spread:pad, x1:0, y1:0, x2:0, y2:1, "
                                 "stop:0 #467dd1, stop:0.5 #3b88fc, stop:1 #467dd1);\n "
                                 "    border-radius: 4px;\n"
                                 "}\n"
                                 "QProgressBar:disabled {\n"
                                 "    color: #616161;\n"
                                 "}\n"
                                 "QProgressBar::chunk:disabled {\n"
                                 "    background-color: #aeaeae;\n"
                                 "}\n"
                                 "QSlider::groove {\n"
                                 "    border: 1px solid #bbbbbb;\n"
                                 "    background-color: #52595d;\n"
                                 "    border-radius: 4px;\n"
                                 "}\n"
                                 "QSlider::groove:horizontal {\n"
                                 "    height: 6px;\n"
                                 "}\n"
                                 "QSlider::groove:vertical {\n"
                                 "    width: 6px;\n"
                                 "}\n"
                                 "QSlider::handle:horizontal {\n"
                                 "    background: #ffffff;\n"
                                 "    border-style: solid;\n"
                                 "    border-width: 1px;\n"
                                 "    border-color: rgb(207,207,207);\n"
                                 "    width: 12px;\n"
                                 "    margin: -5px 0;\n"
                                 "    border-radius: 7px;\n"
                                 "}\n"
                                 "QSlider::handle:vertical {\n"
                                 "    background: #ffffff;\n"
                                 "    border-style: solid;\n"
                                 "    border-width: 1px;\n"
                                 "    border-color: rgb(207,207,207);\n"
                                 "    height: 12px;\n"
                                 "    margin: 0 -5px;\n"
                                 "    border-radius: 7px;\n"
                                 "}\n"
                                 "QSlider::add-page, QSlider::sub-page {\n"
                                 "    border: 1px transparent;\n"
                                 "    background-color: #52595d;\n"
                                 "    border-radius: 4px;\n"
                                 "}\n"
                                 "QSlider::add-page:horizontal {\n"
                                 "background: qlineargradient(spread:pad, x1:0, y1:0, x2:0, y2:1, stop:0 #ddd5d5, "
                                 "stop:0.5 #dad3d3, stop:1 #ddd5d5);\n "
                                 "}\n"
                                 "QSlider::sub-page:horizontal {\n"
                                 "background-color: qlineargradient(spread:pad, x1:0, y1:0, x2:1, y2:0, "
                                 "stop:0 #467dd1, stop:0.5 #3b88fc, stop:1 #467dd1);\n "
                                 "}\n"
                                 "QSlider::add-page:vertical {\n"
                                 "background-color: qlineargradient(spread:pad, x1:0, y1:0, x2:0, y2:1, "
                                 "stop:0 #467dd1, stop:0.5 #3b88fc, stop:1 #467dd1);\n "
                                 "}\n"
                                 "QSlider::sub-page:vertical {\n"
                                 "background: qlineargradient(spread:pad, x1:0, y1:0, x2:1, y2:0, stop:0 #ddd5d5, "
                                 "stop:0.5 #dad3d3, stop:1 #ddd5d5);\n "
                                 "}\n"
                                 "QSlider::add-page:horizontal:disabled, QSlider::sub-page:horizontal:disabled, "
                                 "QSlider::add-page:vertical:disabled, QSlider::sub-page:vertical:disabled {\n "
                                 "    background: #b9b9b9;\n"
                                 "}\n"
                                 "QComboBox, QFontComboBox {\n"
                                 "    border-width: 2px;\n"
                                 "    border-radius: 8px;\n"
                                 "    border-style: solid;\n"
                                 "border-top-color: qlineargradient(spread:pad, x1:0.5, y1:1, x2:0.5, y2:0, "
                                 "stop:0 #c1c9cf, stop:1 #d2d8dd);\n "
                                 "border-right-color: qlineargradient(spread:pad, x1:0, y1:0, x2:1, y2:0, "
                                 "stop:0 #c1c9cf, stop:1 #d2d8dd);\n "
                                 "border-bottom-color: qlineargradient(spread:pad, x1:0.5, y1:0, x2:0.5, y2:1, "
                                 "stop:0 #c1c9cf, stop:1 #d2d8dd);\n "
                                 "border-left-color: qlineargradient(spread:pad, x1:1, y1:0, x2:0, y2:0, "
                                 "stop:0 #c1c9cf, stop:1 #d2d8dd);\n "
                                 "    background-color: #f4f4f4;\n"
                                 "    color: #272727;\n"
                                 "    padding-left: 5px;\n"
                                 "}\n"
                                 "QComboBox:editable, QComboBox:!editable, QComboBox::drop-down:editable, "
                                 "QComboBox:!editable:on, QComboBox::drop-down:editable:on {\n "
                                 "    background: #ffffff;\n"
                                 "}\n"
                                 "QComboBox::drop-down {\n"
                                 "    subcontrol-origin: padding;\n"
                                 "    subcontrol-position: top right;\n"
                                 "    width: 15px;\n"
                                 "    color: #272727;\n"
                                 "    border-left-width: 1px;\n"
                                 "    border-left-color: darkgray;\n"
                                 "    border-left-style: solid;\n"
                                 "    border-top-right-radius: 3px;\n"
                                 "    border-bottom-right-radius: 3px;\n"
                                 "}\n"
                                 "QComboBox::down-arrow {\n"
                                 "image: url(/usr/share/icons/Adwaita/16x16/actions/go-down-symbolic.symbolic.png); "
                                 "/*Adawaita icon thene*/\n "
                                 "}\n"
                                 "\n"
                                 "QComboBox::down-arrow:on {\n"
                                 "    top: 1px;\n"
                                 "    left: 1px;\n"
                                 "}\n"
                                 "QComboBox QAbstractItemView {\n"
                                 "    border: 1px solid darkgray;\n"
                                 "    border-radius: 8px;\n"
                                 "    selection-background-color: #dadada;\n"
                                 "    selection-color: #272727;\n"
                                 "    color: #272727;\n"
                                 "    background: white;\n"
                                 "}\n"
                                 "QLabel, QCheckBox, QRadioButton {\n"
                                 "    color: #272727;\n"
                                 "}\n"
                                 "QCheckBox {\n"
                                 "    padding: 2px;\n"
                                 "}\n"
                                 "QCheckBox:disabled, QRadioButton:disabled {\n"
                                 "    color: #808086;\n"
                                 "    padding: 2px;\n"
                                 "}\n"
                                 "\n"
                                 "QCheckBox:hover {\n"
                                 "    border-radius:4px;\n"
                                 "    border-style:solid;\n"
                                 "    padding-left: 1px;\n"
                                 "    padding-right: 1px;\n"
                                 "    padding-bottom: 1px;\n"
                                 "    padding-top: 1px;\n"
                                 "    border-width:1px;\n"
                                 "    border-color: transparent;\n"
                                 "}\n"
                                 "QCheckBox::indicator:checked {\n"
                                 "image: url(/usr/share/icons/Adwaita/16x16/actions/object-select-symbolic.symbolic"
                                 ".png);\n "
                                 "    height: 15px;\n"
                                 "    width: 15px;\n"
                                 "    border-style:solid;\n"
                                 "    border-width: 1px;\n"
                                 "    border-color: #48a5fd;\n"
                                 "    color: #ffffff;\n"
                                 "    border-radius: 3px;\n"
                                 "background-color: qlineargradient(spread:pad, x1:0, y1:0, x2:0, y2:1, "
                                 "stop:0 #48a5fd, stop:0.5 #329cfb, stop:1 #48a5fd);\n "
                                 "}\n"
                                 "QCheckBox::indicator:unchecked {\n"
                                 "    \n"
                                 "    height: 15px;\n"
                                 "    width: 15px;\n"
                                 "    border-style:solid;\n"
                                 "    border-width: 1px;\n"
                                 "    border-color: #48a5fd;\n"
                                 "    border-radius: 3px;\n"
                                 "    background-color: #fbfdfa;\n"
                                 "}\n"
                                 "QLCDNumber {\n"
                                 "    color: #616161;;\n"
                                 "}\n"
                                 "QMenuBar {\n"
                                 "    background-color: #ececec;\n"
                                 "}\n"
                                 "QMenuBar::item {\n"
                                 "    color: #616161;\n"
                                 "    spacing: 3px;\n"
                                 "    padding: 1px 4px;\n"
                                 "    background-color: #ececec;\n"
                                 "}\n"
                                 "\n"
                                 "QMenuBar::item:selected {\n"
                                 "    background-color: #dadada;\n"
                                 "    color: #3d3d3d;\n"
                                 "}\n"
                                 "QMenu {\n"
                                 "    background-color: #ececec;\n"
                                 "}\n"
                                 "QMenu::item:selected {\n"
                                 "    background-color: #dadada;\n"
                                 "    color: #3d3d3d;\n"
                                 "}\n"
                                 "QMenu::item {\n"
                                 "    color: #616161;;\n"
                                 "    background-color: #e0e0e0;\n"
                                 "}\n"
                                 "QTabWidget {\n"
                                 "    color:rgb(0,0,0);\n"
                                 "    background-color:#000000;\n"
                                 "}\n"
                                 "QTabWidget::pane {\n"
                                 "    border-color: #050a0e;\n"
                                 "    background-color: #e0e0e0;\n"
                                 "    border-width: 1px;\n"
                                 "    border-radius: 4px;\n"
                                 "    position: absolute;\n"
                                 "    top: -0.5em;\n"
                                 "    padding-top: 0.5em;\n"
                                 "}\n"
                                 "\n"
                                 "QTabWidget::tab-bar {\n"
                                 "    alignment: center;\n"
                                 "}\n"
                                 "\n"
                                 "QTabBar::tab {\n"
                                 "    border-bottom: 1px solid #c0c0c0;\n"
                                 "    padding: 3px;\n"
                                 "    color: #272727;\n"
                                 "    background-color: #fefefc;\n"
                                 "    margin-left:0px;\n"
                                 "}\n"
                                 "QTabBar::tab:!last {\n"
                                 "    border-right: 1px solid;\n"
                                 "    border-right-color: #c0c0c0;\n"
                                 "    border-bottom-color: #c0c0c0;\n"
                                 "}\n"
                                 "QTabBar::tab:first {\n"
                                 "    border-top-left-radius: 4px;\n"
                                 "    border-bottom-left-radius: 4px;\n"
                                 "}\n"
                                 "QTabBar::tab:last {\n"
                                 "    border-top-right-radius: 4px;\n"
                                 "    border-bottom-right-radius: 4px;\n"
                                 "}\n"
                                 "QTabBar::tab:selected, QTabBar::tab:last:selected, QTabBar::tab:hover {\n"
                                 "    color: #FFFFFF;\n"
                                 "background-color: qlineargradient(spread:pad, x1:0.5, y1:0, x2:0.5, y2:1, "
                                 "stop:0 #84afe5, stop:1 #1168e4);\n "
                                 "}\n"
                                 "QRadioButton::indicator {\n"
                                 "    height: 14px;\n"
                                 "    width: 14px;\n"
                                 "    border-style:solid;\n"
                                 "    border-radius:7px;\n"
                                 "    border-width: 1px;\n"
                                 "}\n"
                                 "QRadioButton::indicator:checked {\n"
                                 "    border-color: #48a5fd;\n"
                                 "background-color: qradialgradient(cx:0.5, cy:0.5, radius:0.4,fx:0.5, fy:0.5, "
                                 "stop:0 #ffffff, stop:0.5 #ffffff, stop:0.6 #48a5fd, stop:1 #48a5fd);\n "
                                 "}\n"
                                 "QRadioButton::indicator:!checked {\n"
                                 "    border-color: #a9b7c6;\n"
                                 "    background-color: #fbfdfa;\n"
                                 "}\n"
                                 "QStatusBar {\n"
                                 "    color:#027f7f;\n"
                                 "}\n"
                                 "\n"
                                 "QDial {\n"
                                 "    background: #16a085;\n"
                                 "}\n"
                                 "\n"
                                 "QToolBox {\n"
                                 "    color: #a9b7c6;\n"
                                 "    background-color: #222b2e;\n"
                                 "}\n"
                                 "QToolBox::tab {\n"
                                 "    color: #a9b7c6;\n"
                                 "    background-color:#222b2e;\n"
                                 "}\n"
                                 "QToolBox::tab:selected {\n"
                                 "    color: #FFFFFF;\n"
                                 "    background-color:#222b2e;\n"
                                 "}\n"
                                 "QScrollArea {\n"
                                 "    color: #FFFFFF;\n"
                                 "    background-color:#222b2e;\n"
                                 "}\n"
                                 "\n"
                                 "QScrollBar:horizontal {\n"
                                 "    max-height: 10px;\n"
                                 "    border: 1px transparent grey;\n"
                                 "    margin: 0px 20px 0px 20px;\n"
                                 "    background: transparent;\n"
                                 "}\n"
                                 "QScrollBar:vertical {\n"
                                 "    max-width: 10px;\n"
                                 "    border: 1px transparent grey;\n"
                                 "    margin: 20px 0px 20px 0px;\n"
                                 "    background: transparent;\n"
                                 "}\n"
                                 "QScrollBar::handle:vertical, QScrollBar::handle:horizontal {\n"
                                 "    background: #52595d;\n"
                                 "    border-style: transparent;\n"
                                 "    border-radius: 4px;\n"
                                 "    min-height: 25px;\n"
                                 "}\n"
                                 "QScrollBar::handle:horizontal:hover, QScrollBar::handle:vertical:hover {\n"
                                 "background: qlineargradient(spread:pad, x1:0, y1:0, x2:1, y2:0, stop:0 #467dd1, "
                                 "stop:0.5 #3b88fc, stop:1 #467dd1);\n "
                                 "}\n"
                                 "QScrollBar::add-line, QScrollBar::sub-line {\n"
                                 "    border: 2px transparent grey;\n"
                                 "    border-radius: 4px;\n"
                                 "    subcontrol-origin: margin;\n"
                                 "    background: #b9b9b9;\n"
                                 "}\n"
                                 "QScrollBar::add-line:horizontal {\n"
                                 "    width: 20px;\n"
                                 "    subcontrol-position: right;\n"
                                 "}\n"
                                 "QScrollBar::add-line:vertical {\n"
                                 "    height: 20px;\n"
                                 "    subcontrol-position: bottom;\n"
                                 "}\n"
                                 "QScrollBar::sub-line:horizontal {\n"
                                 "    width: 20px;\n"
                                 "    subcontrol-position: left;\n"
                                 "}\n"
                                 "QScrollBar::sub-line:vertical {\n"
                                 "    height: 20px;\n"
                                 "    subcontrol-position: top;\n"
                                 "}\n"
                                 "QScrollBar::add-line:vertical:pressed, QScrollBar::add-line:horizontal:pressed, "
                                 "QScrollBar::sub-line:horizontal:pressed, QScrollBar::sub-line:vertical:pressed {\n "
                                 "background: qlineargradient(spread:pad, x1:0, y1:0, x2:1, y2:0, stop:0 #467dd1, "
                                 "stop:0.5 #3b88fc, stop:1 #467dd1);\n "
                                 "}\n"
                                 "QScrollBar::add-page:horizontal, QScrollBar::sub-page:horizontal, "
                                 "QScrollBar::add-page:vertical, QScrollBar::sub-page:vertical {\n "
                                 "    background: none;\n"
                                 "}\n"
                                 "QScrollBar::up-arrow:vertical {\n"
                                 "    image: url(/usr/share/icons/Adwaita/16x16/actions/go-up-symbolic.symbolic.png);\n"
                                 "}\n"
                                 "QScrollBar::down-arrow:vertical {\n"
                                 "image: url(/usr/share/icons/Adwaita/16x16/actions/go-down-symbolic.symbolic.png);\n "
                                 "}\n"
                                 "QScrollBar::left-arrow:horizontal {\n"
                                 "image: url(/usr/share/icons/Adwaita/16x16/actions/go-previous-symbolic.symbolic.png"
                                 ");\n "
                                 "}\n"
                                 "QScrollBar::right-arrow:horizontal {\n"
                                 "image: url(/usr/share/icons/Adwaita/16x16/actions/go-next-symbolic.symbolic.png);\n "
                                 "}")
        self.centralwidget = QtWidgets.QWidget(MainWindow)
        self.centralwidget.setObjectName("centralwidget")
        self.gridLayout = QtWidgets.QGridLayout(self.centralwidget)
        self.gridLayout.setObjectName("gridLayout")
        self.tabWidget = QtWidgets.QTabWidget(self.centralwidget)
        self.tabWidget.setObjectName("tabWidget")
        self.tab_3 = QtWidgets.QWidget()
        self.tab_3.setObjectName("tab_3")
        self.gridLayout_2 = QtWidgets.QGridLayout(self.tab_3)
        self.gridLayout_2.setObjectName("gridLayout_2")
        self.verticalLayout_3 = QtWidgets.QVBoxLayout()
        self.verticalLayout_3.setObjectName("verticalLayout_3")
        self.horizontalLayout_2 = QtWidgets.QHBoxLayout()
        self.horizontalLayout_2.setObjectName("horizontalLayout_2")
        self.label_5 = QtWidgets.QLabel(self.tab_3)
        self.label_5.setText("")
        self.label_5.setObjectName("label_5")
        self.horizontalLayout_2.addWidget(self.label_5)
        self.comboBox = QtWidgets.QComboBox(self.tab_3)
        self.comboBox.setObjectName("comboBox")
        self.comboBox.addItem("")
        self.comboBox.addItem("")
        self.comboBox.addItem("")
        self.comboBox.addItem("")
        self.comboBox.addItem("")
        self.comboBox.addItem("")
        self.comboBox.addItem("")

        self.horizontalLayout_2.addWidget(self.comboBox)
        self.label_6 = QtWidgets.QLabel(self.tab_3)
        self.label_6.setText("")
        self.label_6.setObjectName("label_6")
        self.horizontalLayout_2.addWidget(self.label_6)

        self.horizontalLayout_2.setStretch(0, 40)
        self.horizontalLayout_2.setStretch(1, 20)
        self.horizontalLayout_2.setStretch(2, 40)
        self.verticalLayout_3.addLayout(self.horizontalLayout_2)
        self.horizontalLayout = QtWidgets.QHBoxLayout()
        self.horizontalLayout.setObjectName("horizontalLayout")
        self.verticalLayout = QtWidgets.QVBoxLayout()
        self.verticalLayout.setObjectName("verticalLayout")
        self.label = QtWidgets.QLabel(self.tab_3)
        font = QtGui.QFont()
        font.setFamily("Segoe UI Black")
        font.setPointSize(14)
        font.setBold(True)
        font.setWeight(75)
        self.label.setFont(font)
        self.label.setAlignment(QtCore.Qt.AlignCenter)
        self.label.setIndent(100)
        self.label.setObjectName("label")
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Fixed, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.label.sizePolicy().hasHeightForWidth())
        self.label.setScaledContents(True)
        self.verticalLayout.addWidget(self.label)
        self.label_2 = QtWidgets.QLabel(self.tab_3)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Ignored, QtWidgets.QSizePolicy.Ignored)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.label_2.sizePolicy().hasHeightForWidth())
        self.label_2.setSizePolicy(sizePolicy)
        self.label_2.setStyleSheet("background-color: rgb(255, 255, 255);")
        self.label_2.setText("")
        self.label_2.setScaledContents(True)
        self.label_2.setObjectName("label_2")
        self.verticalLayout.addWidget(self.label_2)
        #
        self.horizontalSlider = QtWidgets.QSlider(self.tab_3)
        self.horizontalSlider.setOrientation(QtCore.Qt.Horizontal)
        self.horizontalSlider.setObjectName("horizontalSlider")
        self.verticalLayout.addWidget(self.horizontalSlider)
        #
        self.verticalLayout.setStretch(0, 10)
        self.verticalLayout.setStretch(1, 90)
        self.horizontalLayout.addLayout(self.verticalLayout)
        self.verticalLayout_2 = QtWidgets.QVBoxLayout()
        self.verticalLayout_2.setObjectName("verticalLayout_2")
        self.label_3 = QtWidgets.QLabel(self.tab_3)
        font = QtGui.QFont()
        font.setFamily("Segoe UI Black")
        font.setPointSize(14)
        font.setBold(True)
        font.setWeight(75)
        self.label_3.setFont(font)
        self.label_3.setAlignment(QtCore.Qt.AlignCenter)
        self.label_3.setIndent(150)
        self.label_3.setObjectName("label_3")
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Fixed, QtWidgets.QSizePolicy.Fixed)
        self.label_3.setScaledContents(True)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.label_3.sizePolicy().hasHeightForWidth())
        self.verticalLayout_2.addWidget(self.label_3)
        self.label_4 = QtWidgets.QLabel(self.tab_3)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Ignored, QtWidgets.QSizePolicy.Ignored)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.label_4.sizePolicy().hasHeightForWidth())
        self.label_4.setSizePolicy(sizePolicy)
        self.label_4.setStyleSheet("background-color: rgb(255, 255, 255);")
        self.label_4.setText("")
        self.label_4.setScaledContents(True)
        self.label_4.setObjectName("label_4")
        self.verticalLayout_2.addWidget(self.label_4)
        #
        self.pushButton = QtWidgets.QPushButton(self.tab_3)
        self.pushButton.setObjectName("pushButton")
        self.verticalLayout_2.addWidget(self.pushButton)
        #
        self.verticalLayout_2.setStretch(0, 10)
        self.verticalLayout_2.setStretch(1, 90)
        self.horizontalLayout.addLayout(self.verticalLayout_2)
        #
        self.horizontalLayout.setStretch(0, 1)
        self.horizontalLayout.setStretch(1, 1)
        #
        self.verticalLayout_3.addLayout(self.horizontalLayout)
        self.gridLayout_2.addLayout(self.verticalLayout_3, 0, 0, 1, 1)
        self.label_7 = QtWidgets.QLabel(self.tab_3)
        self.label_7.setObjectName("label_7")
        self.gridLayout_2.addWidget(self.label_7, 1, 0, 1, 1)
        font2 = QtGui.QFont()
        font2.setFamily("Segoe UI Black")
        font2.setPointSize(11)
        font2.setBold(True)
        font2.setWeight(75)
        self.label_7.setFont(font2)
        self.tabWidget.addTab(self.tab_3, "")
        self.tab_4 = QtWidgets.QWidget()
        self.tab_4.setObjectName("tab_4")
        self.gridLayout_4 = QtWidgets.QGridLayout(self.tab_4)
        self.gridLayout_4.setObjectName("gridLayout_4")
        self.gridLayout_3 = QtWidgets.QGridLayout()
        self.gridLayout_3.setObjectName("gridLayout_3")
        self.verticalLayout_4 = QtWidgets.QVBoxLayout()
        self.verticalLayout_4.setObjectName("verticalLayout_4")
        self.label_8 = QtWidgets.QLabel(self.tab_4)
        self.label_8.setAlignment(QtCore.Qt.AlignCenter)
        self.label_8.setObjectName("label_8")
        self.verticalLayout_4.addWidget(self.label_8)

        self.figure = Figure()

        self.axes = self.figure.add_subplot(1, 1, 1)
        self.axes.set_xlabel('bins')
        self.axes.set_ylabel('pixels')
        self.canvas = FigureCanvas(self.figure)
        self.canvas.setStyleSheet("background-color: rgb(239, 239, 239);")
        # self.figure.tight_layout()
        self.verticalLayout_4.addWidget(self.canvas)

        self.gridLayout_3.addLayout(self.verticalLayout_4, 0, 0, 1, 1)
        self.verticalLayout_5 = QtWidgets.QVBoxLayout()
        self.verticalLayout_5.setObjectName("verticalLayout_5")
        self.label_9 = QtWidgets.QLabel(self.tab_4)
        self.label_9.setAlignment(QtCore.Qt.AlignCenter)
        self.label_9.setObjectName("label_9")
        self.verticalLayout_5.addWidget(self.label_9)

        self.figure1 = Figure()

        self.axes1 = self.figure1.add_subplot(1, 1, 1)
        self.axes1.set_xlabel('bins')
        self.axes1.set_ylabel('pixels')
        self.canvas1 = FigureCanvas(self.figure1)
        self.canvas1.setStyleSheet("background-color: rgb(239, 239, 239);")
        # self.figure.tight_layout()
        self.verticalLayout_5.addWidget(self.canvas1)

        self.gridLayout_3.addLayout(self.verticalLayout_5, 0, 1, 1, 1)
        self.verticalLayout_6 = QtWidgets.QVBoxLayout()
        self.verticalLayout_6.setObjectName("verticalLayout_6")
        self.label_10 = QtWidgets.QLabel(self.tab_4)
        self.label_10.setAlignment(QtCore.Qt.AlignCenter)
        self.label_10.setObjectName("label_10")
        self.verticalLayout_6.addWidget(self.label_10)

        self.figure2 = Figure()

        self.axes2 = self.figure2.add_subplot(1, 1, 1)
        self.axes2.set_xlabel('bins')
        self.axes2.set_ylabel('pixels')
        self.canvas2 = FigureCanvas(self.figure2)
        self.canvas2.setStyleSheet("background-color: rgb(239, 239, 239);")
        # self.figure.tight_layout()
        self.verticalLayout_6.addWidget(self.canvas2)

        self.gridLayout_3.addLayout(self.verticalLayout_6, 1, 0, 1, 1)
        self.verticalLayout_7 = QtWidgets.QVBoxLayout()
        self.verticalLayout_7.setObjectName("verticalLayout_7")
        self.label_11 = QtWidgets.QLabel(self.tab_4)
        self.label_11.setAlignment(QtCore.Qt.AlignCenter)
        self.label_11.setObjectName("label_11")
        self.verticalLayout_7.addWidget(self.label_11)

        self.figure3 = Figure()

        self.axes3 = self.figure3.add_subplot(1, 1, 1)
        self.axes3.set_xlabel('bins')
        self.axes3.set_ylabel('pixels')
        self.canvas3 = FigureCanvas(self.figure3)
        self.canvas3.setStyleSheet("background-color: rgb(239, 239, 239);")
        # self.figure.tight_layout()
        self.verticalLayout_7.addWidget(self.canvas3)

        self.gridLayout_3.addLayout(self.verticalLayout_7, 1, 1, 1, 1)
        self.gridLayout_4.addLayout(self.gridLayout_3, 0, 0, 1, 1)
        self.label_12 = QtWidgets.QLabel(self.tab_4)
        self.label_12.setObjectName("label_12")
        self.gridLayout_4.addWidget(self.label_12, 1, 0, 1, 1)
        self.tabWidget.addTab(self.tab_4, "")
        self.gridLayout.addWidget(self.tabWidget, 0, 0, 1, 1)

        MainWindow.setCentralWidget(self.centralwidget)
        self.menubar = QtWidgets.QMenuBar(MainWindow)
        self.menubar.setGeometry(QtCore.QRect(0, 0, 800, 26))
        self.menubar.setObjectName("menubar")
        self.File = QtWidgets.QMenu(self.menubar)
        self.File.setObjectName("File")
        MainWindow.setMenuBar(self.menubar)
        self.statusbar = QtWidgets.QStatusBar(MainWindow)
        self.statusbar.setObjectName("statusbar")
        self.Open = QtWidgets.QAction(MainWindow)
        self.Open.setObjectName("Open")
        self.Save = QtWidgets.QAction(MainWindow)
        self.Save.setObjectName("Save")

        self.File.addAction(self.Open)
        self.File.addAction(self.Save)

        self.menubar.addAction(self.File.menuAction())
        MainWindow.setStatusBar(self.statusbar)
        self.toolBar = QtWidgets.QToolBar(MainWindow)
        self.toolBar.setObjectName("toolBar")
        MainWindow.addToolBar(QtCore.Qt.TopToolBarArea, self.toolBar)

        self.retranslateUi(MainWindow)
        self.tabWidget.setCurrentIndex(2)
        # self.horizontalSlider_2.valueChanged['int'].connect(self.kernelsize)
        QtCore.QMetaObject.connectSlotsByName(MainWindow)

    def retranslateUi(self, MainWindow):
        _translate = QtCore.QCoreApplication.translate
        MainWindow.setWindowTitle(_translate("MainWindow", "Digital Image Filter"))
        MainWindow.setWindowIcon(QIcon("lol.png"))  # حطوا صورة من عندكوا
        self.comboBox.setItemText(0, _translate("Form", "LPF"))
        self.comboBox.setItemText(1, _translate("Form", "HPF"))
        self.comboBox.setItemText(2, _translate("Form", "Median"))
        self.comboBox.setItemText(3, _translate("Form", "Laplacian"))
        self.comboBox.setItemText(4, _translate("Form", "Histogram Equalization"))
        self.comboBox.setItemText(5, _translate("Form", "Bilateral Filter"))
        self.comboBox.setItemText(6, _translate("Form", "Gaussian Filter"))
        self.label.setText(_translate("MainWindow", "Original"))
        self.label_3.setText(_translate("MainWindow", "Filtered"))
        self.label_7.setText(_translate("MainWindow", " .."))
        self.tabWidget.setTabText(self.tabWidget.indexOf(self.tab_3), _translate("MainWindow", "Filters"))
        self.label_8.setText(_translate("MainWindow", " "))
        self.label_9.setText(_translate("MainWindow", " "))
        self.label_10.setText(_translate("MainWindow", ""))
        self.label_11.setText(_translate("MainWindow", ""))
        self.label_12.setText(_translate("MainWindow", " "))
        self.pushButton.setText(_translate("MainWindow", "Set Changes ->"))
        self.tabWidget.setTabText(self.tabWidget.indexOf(self.tab_4),
                                  _translate("MainWindow", "Fourier and Histograms"))
        self.toolBar.setWindowTitle(_translate("MainWindow", "toolBar"))
        self.File.setTitle(_translate("MainWindow", "File"))
        self.Open.setText(_translate("MainWindow", "Open"))
        self.Open.triggered.connect(self.loadImage)
        self.Save.setText(_translate("MainWindow", "Save"))
        self.label_7.setText(_translate("MainWindow", "Window Size"))
        self.Save.triggered.connect(self.savePhoto)
        self.comboBox.currentTextChanged.connect(self.apply_filter)
        self.horizontalSlider.valueChanged['int'].connect(self.apply_filter)
        self.pushButton.clicked.connect(self.setchanges)

    def HPF(self, size):
        img = np.fft.fftshift(self.fftuse)
        h, w = img.shape[0:2]  # Getting image properties
        h1, w1 = int(h / 2), int(w / 2)  # Find the center point of the Fourier spectrum
        img[h1 - int(size / 2):h1 + int(size / 2), w1 - int(size / 2):w1 + int(
            size / 2)] = 0  # Center point plus or minus half of the filter size, forming a filter size that defines the
        # size, then set to 0
        return img

    def LPF(self, size):
        img = np.fft.fftshift(self.fftuse)
        h, w = img.shape[0:2]  # Getting image properties
        h1, w1 = int(h / 2), int(w / 2)  # Find the center point of the Fourier spectrum
        img2 = np.zeros((h, w))  # Define a blank black image with the same size as the Fourier Transform Transfer
        # img4 = gaussian_filter(img, sigma=1)
        # x = gauss(1, 1)  #0.859481547249015 , 0.38498899727793556
        # print(x)
        img2[h1 - int(size / 2):h1 + int(size / 2), w1 - int(size / 2):w1 + int(
            size / 2)] = 0.859481547249015  # Center point plus or minus half of the filter size, forming a filter
        # size that
        # defines the
        # size, then set to 1, preserving the low frequency part
        img3 = img2 * img  # A low-pass filter is obtained by multiplying the defined low-pass filter with the incoming
        # Fourier spectrogram one-to-one.
        return img3

    def histogram_equalization(self):
        # self.axes.clear()
        # self.axes1.clear()
        diplayed_img = cv2.cvtColor(self.image, cv2.COLOR_BGR2GRAY)
        img = diplayed_img
        image = QImage(diplayed_img, diplayed_img.shape[1], diplayed_img.shape[0], diplayed_img.strides[0],
                       QImage.Format_Indexed8)
        self.label_2.setPixmap(QtGui.QPixmap.fromImage(image))

        flat_img = img.flatten()
        max_intesity = flat_img.max()

        (n, bins, patches) = self.axes.hist(flat_img, bins=256, color='purple')
        pix_sum = len(flat_img)

        cdf = np.zeros(256)
        pdf = n / pix_sum
        cdf[0] = pdf[0]
        for i in range(1, 256):
            cdf[i] = cdf[i - 1] + pdf[i]
        sk = cdf * max_intesity

        sk_np = sk.astype('uint8')
        # get the value from cumulative sum for every index in flat_img, and set that as img_new
        self.img_new = sk_np[flat_img]
        self.axes1.hist(self.img_new, bins=256, color='purple')
        self.img_new = np.reshape(self.img_new, img.shape)
        self.output = self.img_new
        image = QImage(self.img_new, self.img_new.shape[1], self.img_new.shape[0], self.img_new.strides[0], QImage.Format_Indexed8)
        self.label_4.setPixmap(QtGui.QPixmap.fromImage(image))
        self.axes.set_ylabel('Frequency', color='purple')
        self.axes.set_xlabel('Intensities', color='purple')
        self.axes.set_title('Original Histogram', color='purple')
        self.axes.grid()
        self.axes1.set_ylabel('Frequency', color='purple')
        self.axes1.set_xlabel('Intensities', color='purple')
        self.axes1.set_title('Equalized Histogram', color='purple')
        self.axes1.grid()
        self.canvas.draw()
        self.canvas1.draw()

    def loadImage(self):
        """ This function will load the user selected image
            and set it to label using the setPhoto function
        """
        self.label_2.clear()
        self.label_4.clear()
        self.filename = QFileDialog.getOpenFileName(filter="Image (*.*)")[0]
        self.image = cv2.imread(self.filename, cv2.IMREAD_COLOR)
        self.flag = 0
        img = cv2.cvtColor(self.image, cv2.COLOR_BGR2HSV)
        self.fftuseo = np.fft.fft2(cv2.cvtColor(self.image, cv2.COLOR_BGR2GRAY))
        self.fftuse = np.fft.fft2(img[:, :, 2])
        self.setPhoto(self.image)

    def setPhoto(self, image):
        """ This function will take image input and resize it
            only for display purpose and convert it to QImage
            to set at the label.
        """
        #self.tmp = image
        #  image = imutils.resize(image, width=640)
        frame = cv2.cvtColor(image, cv2.COLOR_BGR2RGB)
        image = QImage(frame, frame.shape[1], frame.shape[0], frame.strides[0], QImage.Format_RGB888)
        self.label_2.setPixmap(QtGui.QPixmap.fromImage(image))

    def display_histogram(self):
        self.axes.clear()

        color = ('b', 'g', 'r')
        for i, col in enumerate(color):
            histr = cv2.calcHist([self.image], [i], None, [256], [0, 256])
            self.axes.plot(histr, color=col, linewidth=3.0)
            self.axes.set_ylabel('Y', color='blue')
            self.axes.set_xlabel('X', color='blue')
            self.axes.set_title('Histogram')

            self.axes.grid()
        self.canvas.draw()

    def filter_histogram(self):

        # self.output = self.apply_filter()

        color = ('b', 'g', 'r')
        for i, col in enumerate(color):
            histr = cv2.calcHist([self.output], [i], None, [256], [0, 256])
            self.axes1.plot(histr, color=col, linewidth=3.0)
            self.axes1.set_ylabel('Y', color='blue')
            self.axes1.set_xlabel('X', color='blue')
            self.axes1.set_title('Histogram of Filtered Image')

            self.axes1.grid()
        self.canvas1.draw()

    def setchanges(self):
        if self.flag != 1:
            self.display_histogram()
            self.filter_histogram()
        self.fft()

    def apply_filter(self):
        filter = self.comboBox.currentText()
        self.axes1.clear()

        if filter == 'LPF':
            if self.flag == 1:
                self.setPhoto(self.image)
            placeholderl = cv2.cvtColor(self.image, cv2.COLOR_BGR2HSV)
            imgl = self.LPF(self.horizontalSlider.value())
            idft_shift = np.fft.ifftshift(imgl)
            ifimg = np.fft.ifft2(idft_shift)
            ifimg = np.abs(ifimg)
            placeholderl[:, :, 2] = ifimg
            self.output = cv2.cvtColor(placeholderl, cv2.COLOR_HSV2RGB)
            frame = self.output
            image = QImage(frame, frame.shape[1], frame.shape[0], frame.strides[0], QImage.Format_RGB888)
            self.label_4.setPixmap(QtGui.QPixmap.fromImage(image))
            self.flag = 0

        if filter == 'Bilateral Filter':
            if self.flag == 1:
                self.setPhoto(self.image)
            self.output = cv2.bilateralFilter(self.image, 19, 10 * self.horizontalSlider.value(),
                                              10 * self.horizontalSlider.value())
            frame = cv2.cvtColor(self.output, cv2.COLOR_BGR2RGB)
            image = QImage(frame, frame.shape[1], frame.shape[0], frame.strides[0], QImage.Format_RGB888)
            self.label_4.setPixmap(QtGui.QPixmap.fromImage(image))
            self.flag = 0

        if filter == 'Gaussian Filter':
            if self.flag == 1:
                self.setPhoto(self.image)
            self.output = cv2.GaussianBlur(self.image, (
                2 * self.horizontalSlider.value() + 1, 2 * self.horizontalSlider.value() + 1), 0)
            frame = cv2.cvtColor(self.output, cv2.COLOR_BGR2RGB)
            image = QImage(frame, frame.shape[1], frame.shape[0], frame.strides[0], QImage.Format_RGB888)
            self.label_4.setPixmap(QtGui.QPixmap.fromImage(image))
            self.flag = 0

        if filter == 'HPF':
            if self.flag == 1:
                self.setPhoto(self.image)
            placeholderh = cv2.cvtColor(self.image, cv2.COLOR_BGR2HSV)
            imgh = self.HPF(self.horizontalSlider.value())
            idft_shift = np.fft.ifftshift(imgh)
            ifimg = np.fft.ifft2(idft_shift)
            ifimg = np.abs(ifimg)
            placeholderh[:, :, 2] = ifimg
            self.output = cv2.cvtColor(placeholderh, cv2.COLOR_HSV2RGB)
            frame = self.output
            image = QImage(frame, frame.shape[1], frame.shape[0], frame.strides[0], QImage.Format_RGB888)
            self.label_4.setPixmap(QtGui.QPixmap.fromImage(image))
            self.flag = 0

        if filter == 'Median':
            if self.flag == 1:
                self.setPhoto(self.image)
            self.output = cv2.medianBlur(self.image, 2 * self.horizontalSlider.value() + 1)
            frame = cv2.cvtColor(self.output, cv2.COLOR_BGR2RGB)
            image = QImage(frame, frame.shape[1], frame.shape[0], frame.strides[0], QImage.Format_RGB888)
            self.label_4.setPixmap(QtGui.QPixmap.fromImage(image))
            self.flag = 0

        if filter == 'Laplacian':
            if self.flag == 1:
                self.setPhoto(self.image)
            try:
                self.output = cv2.Laplacian(self.image, -1, ksize=2 * self.horizontalSlider.value() + 1, scale=1,
                                            delta=0,
                                            borderType=cv2.BORDER_DEFAULT)
                frame = cv2.cvtColor(self.output, cv2.COLOR_BGR2RGB)
            except:
                self.output = cv2.Laplacian(self.image, -1, ksize=5, scale=1,
                                            delta=0,
                                            borderType=cv2.BORDER_DEFAULT)
                frame = cv2.cvtColor(self.output, cv2.COLOR_BGR2RGB)
            image = QImage(frame, frame.shape[1], frame.shape[0], frame.strides[0], QImage.Format_RGB888)
            self.label_4.setPixmap(QtGui.QPixmap.fromImage(image))
            self.flag = 0
        if filter == 'Histogram Equalization':
            self.histogram_equalization()
            self.flag = 1
        # convolve the filter and the image by using values of surrounding pixels to calc the new pixel value

        # To convert back from BGR to RGB space color

        # To display image in label widget
        # should occur when you press the button
        # self.display_histogram()
        # self.filter_histogram()
        # self.fft()
        return self.output

    def convert_grayscale(self):

        read_img = cv2.imread(self.filename, cv2.IMREAD_COLOR)
        frame = cv2.cvtColor(read_img, cv2.COLOR_RGB2GRAY)
        image = QImage(frame, frame.shape[1], frame.shape[0], frame.strides[0], QImage.Format_Indexed8)

    # self.label_9.setPixmap(QtGui.QPixmap.fromImage(image))

    def fft(self):
        dark_image_grey_fourier = np.fft.fftshift(self.fftuseo)
        gray = (20 * np.log(abs(dark_image_grey_fourier)))
        if self.flag != 1:
            imageo_gray = cv2.cvtColor(self.output, cv2.COLOR_BGR2GRAY)
        else:
            imageo_gray1 = self.img_new
        dark_image_grey_fouriero = np.fft.fftshift(np.fft.fft2(imageo_gray))
        grayo = (20 * np.log(abs(dark_image_grey_fouriero)))
        self.axes2.imshow(gray, cmap='gray')
        self.axes2.set_ylabel('Y', color='blue')
        self.axes2.set_xlabel('X', color='blue')
        self.axes2.set_title('Frequancy Mag')
        self.axes2.grid()
        self.axes3.imshow(grayo, cmap='gray')
        self.axes3.set_ylabel('Y', color='blue')
        self.axes3.set_xlabel('X', color='blue')
        self.axes3.set_title('Frequancy Mag')
        self.axes3.grid()
        self.canvas2.draw()
        self.canvas3.draw()

    def savePhoto(self):
        self.filename = QFileDialog.getSaveFileName(filter="JPG(*.jpg);;PNG(*.png);;TIFF(*.tiff);;BMP(*.bmp)")[0]
        cv2.imwrite(self.filename, self.output)
        print('Image saved as:', self.filename)


if __name__ == "__main__":
    import sys

    app = QtWidgets.QApplication(sys.argv)
    MainWindow = QtWidgets.QMainWindow()
    ui = Ui_MainWindow()
    ui.setupUi(MainWindow)
    MainWindow.show()
    sys.exit(app.exec_())
